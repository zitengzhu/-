# 二维列表可以将信息以行和列的方式进行表示
'''
定义二维列表的方式：
    1.直接定义
    2.使用嵌套for循环定义
    3.使用列表推导式进行创建
'''

# 1.直接定义列表
# list = [[1,2,3],[4,5,6]]
# print(list)    [[1, 2, 3], [4, 5, 6]]  直接打印数据不如二维数据直观可以通过pandas模块进行数据转化


# 2.使用嵌套for循环创建二维数据
# 定义空的列表
a=[]
# 设置一个次数为4的循环
for i in range(4):
    # 每一个循环在空列表内添加一个小列表
    a.append([])
    # 循环 数据 j 赋值为 0——4
    for j in range(0,5):
        # 通过索引在a数据的大列表中找到小列表并加入j的数据
        a[i].append(j)
# print(a)         [[0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4]]


# 3.使用列表推导式进行创建
#   创建一个列表数据是0,1,2,3  将这个列表创建之后循环列表5次 形成列表a
a = [[j for j in range(0,4)]for i in range(5)]
# print(a)   [[0, 1, 2, 3], [0, 1, 2, 3], [0, 1, 2, 3], [0, 1, 2, 3], [0, 1, 2, 3]]

'''
创建二维列表后可以通过 name[索引1][索引2] 来寻找二维列表的数据
'''

'---------------------二维列表的实际应用-------------------------'
str1 = 'aaaaa'
str2 = 'bbbbb'
str3 = 'ccccc'
str4 = 'ddddd'

list = [list(str1),list(str2),list(str3),list(str4)]
# 设置一个次数为4的循环  对应数据的行数
for i in range(4):
    # 设置一个次数为5的循环  对应数据的列数
    for j in range(5):
        # 通过条件判断是否为每行数据的最后一个元素
        if j ==4:   # 是数据的最后一个元素 打印后进行换行
            print(list[i][j])
        else:   # 不是数据的最后一个元素进行不换行打印
            print(list[i][j],end='')







